[tool.poetry]
name = "fansly-scraper"
version = "0.10.0"
description = "Easy-to-use fansly.com content scraping tool. Enjoy your Fansly content offline anytime, anywhere in the highest possible content resolution! Fully customizable to download in bulk or single: photos, videos & audio from the timeline, messages, collection & single posts."
authors = [
    "prof79",
    "Avnsx",
    "pawnstar81",
    "UpAndDown666",
    "icewinterberry12",
    "1gintonic",
    "Jakan <github@jakan.co>",
]
# credits = [
#     "Avnsx",
#     "KasumiDev",
#     "FletcherD",
#     "XelaRellum",
#     "sunbart",
# ]
license = "GPL-3.0-only"
readme = "README.md"
packages = [
    { include = "alembic" },
    { include = "api" },
    { include = "config" },
    { include = "download" },
    { include = "errors"},
    { include = "fileio" },
    { include = "helpers" },
    { include = "media" },
    { include = "metadata" },
    { include = "pathio"},
    { include = "textio" },
    { include = "updater" },
]

[tool.poetry.dependencies]
python = ">=3.12,<3.14"
imagehash = "4.3.1"
loguru = ">=0.7.2"
m3u8 = ">=4.0.0"
pillow = "^10.2"
plyvel-ci = "^1.5"
psutil = ">=5.9.8"
pyffmpeg = ">=2.4.2.18.1"
python-dateutil = ">=2.8.2,<3.0.0"
requests = ">=2.31.0,<3.0.0"
rich = ">=13.7.0,<14.0.0"
strenum = ">=0.4.15,<0.5.0"
websockets = ">=12.0,<13.0"
alembic = "^1.14.0"
aiosqlite = "^0.20.0"
greenlet = "^3.1.1"
tqdm = "^4.67.1"


[tool.poetry.group.dev.dependencies]
pyinstaller = "^6.11.1"
types-python-dateutil = "^2.9.0.20241206"
types-requests = "^2.32.0.20241016"
types-setuptools = "^75.6.0.20241126"
types-pillow = "^10.2.0"
memory-profiler = "^0.61.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.3"
pytest-xdist = "^3.5.0"  # For parallel test execution
pytest-timeout = "^2.2.0"  # For test timeouts
pytest-randomly = "^3.15.0"  # For random test ordering

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"



[tool.bandit]
# Exclude test files
exclude_dirs = ["tests"]
# Skip specific checks
skips = [
    'B110',  # try-except-pass
    'B113',  # request-without-timeout
    'B311',  # random
    'B404',  # import-subprocess
    'B601',  # paramiko
    'B602',  # subprocess-popen-with-shell-equals-true
    'B603',  # subprocess-without-shell-equals-true
    'B605',  # start-process-with-partial-path
    'B606',  # start-process-with-no-shell
    'B607',  # start-process-with-partial-path
    'B608',  # hardcoded-sql-expressions
]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.flake8]
max-line-length = 88
max-complexity = 10
max-doc-length = 140
extend-ignore = [
    "E203",
    "E501",
    "W505",
    "F401",
]
namespace-packages = true

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = """
    --strict-markers
    --strict-config
    --tb=short
    --cov=metadata
    --cov-report=term-missing
    --cov-report=html
    --randomly-seed=1234
    -n auto
    --dist loadfile
    --timeout=300
"""
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
xfail_strict = true
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
