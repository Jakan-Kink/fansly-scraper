"""changing some FKs/constraints/indexes

Revision ID: 6dcb1d898d8b
Revises: f8df81787709
Create Date: 2025-01-08 01:16:32.989624

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy import inspect

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6dcb1d898d8b"
down_revision: str | None = "f8df81787709"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create new account_media table with CASCADE constraints
    op.create_table(
        "account_media_new",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("accountId", sa.Integer(), nullable=False),
        sa.Column("mediaId", sa.Integer(), nullable=False),
        sa.Column("previewId", sa.Integer(), nullable=True),
        sa.Column("createdAt", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deletedAt", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column("access", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["accountId"],
            ["accounts.id"],
            name="fk_account_media_accountId_accounts",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["mediaId"],
            ["media.id"],
            name="fk_account_media_mediaId_media",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["previewId"], ["media.id"], name="fk_account_media_previewId_media"
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # Copy data
    op.execute(
        "INSERT INTO account_media_new SELECT id, accountId, mediaId, previewId, createdAt, deletedAt, deleted, access FROM account_media"
    )
    op.drop_table("account_media")
    op.rename_table("account_media_new", "account_media")

    # Create index after table recreation
    with op.batch_alter_table("account_media", schema=None) as batch_op:
        batch_op.create_index("ix_account_media_accountId", ["accountId"], unique=False)

    # Create new groups table without message foreign key
    op.create_table(
        "groups_new",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("createdBy", sa.Integer(), nullable=False),
        sa.Column("lastMessageId", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["createdBy"], ["accounts.id"], name="fk_groups_createdBy_accounts"
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # Copy data
    op.execute("INSERT INTO groups_new SELECT id, createdBy, lastMessageId FROM groups")
    op.drop_table("groups")
    op.rename_table("groups_new", "groups")

    # Handle messages table indexes
    # Check if the index exists before trying to drop it
    conn = op.get_bind()
    inspector = inspect(conn)
    indices = inspector.get_indexes("messages")
    has_recipient_index = any(
        idx["name"] == "ix_messages_recipientId" for idx in indices
    )

    with op.batch_alter_table("messages", schema=None) as batch_op:
        if has_recipient_index:
            batch_op.drop_index("ix_messages_recipientId")
        batch_op.create_index("ix_messages_groupId", ["groupId"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Handle messages table indexes first
    with op.batch_alter_table("messages", schema=None) as batch_op:
        batch_op.drop_index("ix_messages_groupId")
        batch_op.create_index("ix_messages_recipientId", ["recipientId"], unique=False)

    # Recreate groups table with message foreign key
    op.create_table(
        "groups_new",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("createdBy", sa.Integer(), nullable=False),
        sa.Column("lastMessageId", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["createdBy"], ["accounts.id"], name="fk_groups_createdBy_accounts"
        ),
        sa.ForeignKeyConstraint(
            ["lastMessageId"], ["messages.id"], name="fk_groups_lastMessageId_messages"
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.execute("INSERT INTO groups_new SELECT id, createdBy, lastMessageId FROM groups")
    op.drop_table("groups")
    op.rename_table("groups_new", "groups")

    # Recreate account_media table without CASCADE
    op.create_table(
        "account_media_new",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("accountId", sa.Integer(), nullable=False),
        sa.Column("mediaId", sa.Integer(), nullable=False),
        sa.Column("previewId", sa.Integer(), nullable=True),
        sa.Column("createdAt", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deletedAt", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column("access", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["accountId"], ["accounts.id"], name="fk_account_media_accountId_accounts"
        ),
        sa.ForeignKeyConstraint(
            ["mediaId"], ["media.id"], name="fk_account_media_mediaId_media"
        ),
        sa.ForeignKeyConstraint(
            ["previewId"], ["media.id"], name="fk_account_media_previewId_media"
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.execute(
        "INSERT INTO account_media_new SELECT id, accountId, mediaId, previewId, createdAt, deletedAt, deleted, access FROM account_media"
    )
    op.drop_table("account_media")
    op.rename_table("account_media_new", "account_media")
    # ### end Alembic commands ###
