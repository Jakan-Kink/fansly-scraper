"""changing some FKs/constraints/indexes

Revision ID: 6dcb1d898d8b
Revises: f8df81787709
Create Date: 2025-01-08 01:16:32.989624

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy import column, inspect, table

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6dcb1d898d8b"
down_revision: str | None = "f8df81787709"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = inspect(conn)

    # Update account_media table with CASCADE constraints
    # Note: We don't use recreate="always" here because account_media_bundle_media
    # has a foreign key referencing account_media.id (the primary key), and PostgreSQL
    # won't allow dropping the primary key when it's referenced by another table.
    account_media_fks = {
        fk["name"] for fk in inspector.get_foreign_keys("account_media")
    }
    account_media_indexes = {
        idx["name"] for idx in inspector.get_indexes("account_media")
    }

    with op.batch_alter_table("account_media", schema=None) as batch_op:
        # Drop existing foreign key constraints only if they exist
        if "account_media_accountId_fkey" in account_media_fks:
            batch_op.drop_constraint("account_media_accountId_fkey", type_="foreignkey")
        if "account_media_mediaId_fkey" in account_media_fks:
            batch_op.drop_constraint("account_media_mediaId_fkey", type_="foreignkey")
        if "fk_account_media_mediaId_cascade" in account_media_fks:
            batch_op.drop_constraint(
                "fk_account_media_mediaId_cascade", type_="foreignkey"
            )
        # Also drop the explicitly named constraints from previous migrations if they exist
        if "fk_account_media_accountId_accounts" in account_media_fks:
            batch_op.drop_constraint(
                "fk_account_media_accountId_accounts", type_="foreignkey"
            )
        if "fk_account_media_mediaId_media" in account_media_fks:
            batch_op.drop_constraint(
                "fk_account_media_mediaId_media", type_="foreignkey"
            )

        # Create new foreign key constraints with CASCADE
        batch_op.create_foreign_key(
            "fk_account_media_accountId_accounts",
            "accounts",
            ["accountId"],
            ["id"],
            ondelete="CASCADE",
        )
        batch_op.create_foreign_key(
            "fk_account_media_mediaId_media",
            "media",
            ["mediaId"],
            ["id"],
            ondelete="CASCADE",
        )

        # Create index only if it doesn't exist
        if "ix_account_media_accountId" not in account_media_indexes:
            batch_op.create_index(
                "ix_account_media_accountId", ["accountId"], unique=False
            )

    # Update groups table to remove message foreign key
    groups_fks = {fk["name"] for fk in inspector.get_foreign_keys("groups")}

    with op.batch_alter_table("groups", schema=None) as batch_op:
        # Drop existing foreign key to messages if it exists
        if "group_lastMessageId_fkey" in groups_fks:
            batch_op.drop_constraint("group_lastMessageId_fkey", type_="foreignkey")

    # Handle messages table indexes
    # Check if the index exists before trying to drop it
    indices = inspector.get_indexes("messages")
    has_recipient_index = any(
        idx["name"] == "ix_messages_recipientId" for idx in indices
    )

    with op.batch_alter_table("messages", schema=None) as batch_op:
        if has_recipient_index:
            batch_op.drop_index("ix_messages_recipientId")
        batch_op.create_index("ix_messages_groupId", ["groupId"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Handle messages table indexes first
    with op.batch_alter_table("messages", schema=None) as batch_op:
        batch_op.drop_index("ix_messages_groupId")
        batch_op.create_index("ix_messages_recipientId", ["recipientId"], unique=False)

    # Revert groups table to add message foreign key back
    with op.batch_alter_table("groups", schema=None) as batch_op:
        batch_op.create_foreign_key(
            "fk_groups_lastMessageId_messages", "messages", ["lastMessageId"], ["id"]
        )

    # Revert account_media table to remove CASCADE
    with op.batch_alter_table("account_media", schema=None) as batch_op:
        # Drop existing index
        try:
            batch_op.drop_index("ix_account_media_accountId")
        except Exception:
            pass

        # Drop CASCADE foreign key constraints
        try:
            batch_op.drop_constraint(
                "fk_account_media_accountId_accounts", type_="foreignkey"
            )
        except Exception:
            pass
        try:
            batch_op.drop_constraint(
                "fk_account_media_mediaId_media", type_="foreignkey"
            )
        except Exception:
            pass

        # Create original foreign key constraints without CASCADE
        batch_op.create_foreign_key(
            "account_media_accountId_fkey", "accounts", ["accountId"], ["id"]
        )
        batch_op.create_foreign_key(
            "account_media_mediaId_fkey", "media", ["mediaId"], ["id"]
        )
    # ### end Alembic commands ###
