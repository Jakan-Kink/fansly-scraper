"""added stories class

Revision ID: cfe472c5a1ae
Revises: 7f057c9b00e0
Create Date: 2025-01-10 12:03:30.070711

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op


# revision identifiers, used by Alembic.
revision: str = "cfe472c5a1ae"
down_revision: str | None = "7f057c9b00e0"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "stories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("authorId", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("content", sa.String(), nullable=False),
        sa.Column("createdAt", sa.DateTime(), nullable=False),  # removed timezone
        sa.Column("updatedAt", sa.DateTime(), nullable=True),  # removed timezone
        sa.ForeignKeyConstraint(
            ["authorId"], ["accounts.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # Update NULL contentType values to ACCOUNT_MEDIA
    # Use raw SQL for PostgreSQL ENUM type
    op.execute(
        """
        UPDATE attachments
        SET "contentType" = 'ACCOUNT_MEDIA'::contenttype
        WHERE "contentType" IS NULL
        """
    )

    # Then make the column non-nullable
    op.execute('ALTER TABLE attachments ALTER COLUMN "contentType" SET NOT NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Make contentType nullable again
    op.execute('ALTER TABLE attachments ALTER COLUMN "contentType" DROP NOT NULL')

    op.drop_table("stories")
    # ### end Alembic commands ###
